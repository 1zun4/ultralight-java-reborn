###############
# CMake setup #
###############
cmake_minimum_required(VERSION 3.25)
project(ultralight-java-reborn)

#####################
# Set CMake options #
#####################
set(CMAKE_CXX_STANDARD 20)

if(NOT DEFINED UJR_JNI_HEADER_DIR)
    # Usually set via gradle, but CMake can also be invoked manually
    message(SEND_ERROR "Missing UJR_JNI_HEADER_DIR, please set it to the path of the JNI header files")
endif()

option(UJR_WARNINGS_AS_ERRORS "Treat warnings as errors" ON)

###########################
# Add 3rd party libraries #
###########################
include(cmake/Ultralight.cmake)
include(CheckCXXCompilerFlag)

find_package(JNI REQUIRED)
if(NOT JNI_FOUND)
    message(SEND_ERROR "JNI could not be found")
endif()

if(UJR_WARNINGS_AS_ERRORS)
    if(MSVC)
        add_compile_options(/W4 /WX)
    else()
        add_compile_options(
                # Enable all possible warnings and treat them as errors
                -Wall
                -Wextra
                -pedantic
                -Werror

                # Those are generated by Ultralight, so we have to disable them
                -Wno-unused-parameter
                -Wno-nested-anon-types
                -Wno-gnu-anonymous-struct
        )

        if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
            # Disable a warning that is generated by Ultralight only on GCC
            #
            # This is only here to allow anonymous structs, but GCC offers no
            # direct option to disable this warning, so we have to disable it
            # globally
            add_compile_options(-Wno-pedantic)
        endif()
    endif()
endif()

if(NOT MSVC)
    check_cxx_compiler_flag(-fconcepts-diagnostics-depth=10 HAS_CONCEPTS_DIAGNOSTICS_DEPTH)
    if(HAS_CONCEPTS_DIAGNOSTICS_DEPTH)
        add_compile_options(-fconcepts-diagnostics-depth=10)
    endif()
endif()

#####################
# Add CMake targets #
#####################
set(UJR_SOURCES
        src/javascript/JSContext.cpp
        src/javascript/JSContextGroup.cpp
        src/javascript/JSContextGroupFactory.cpp
        src/javascript/JSGlobalContext.cpp
        src/javascript/JSGlobalContextFactory.cpp
        src/javascript/JSString.cpp

        src/support/GC.cpp

        src/util/JniClass.cpp
        src/util/JniEnv.cpp
        src/util/JniException.cpp
        src/util/JniExceptionCheck.cpp
        src/util/JniIllegalArgumentException.cpp
        src/util/JniMethod.cpp

        src/wrapper/buffer/Buffer.cpp
        src/wrapper/buffer/BufferNative.cpp

        src/wrapper/clipboard/Clipboard.cpp
        src/wrapper/clipboard/ClipboardNative.cpp

        src/wrapper/filesystem/Filesystem.cpp
        src/wrapper/filesystem/FilesystemNative.cpp

        src/wrapper/logger/Logger.cpp
        src/wrapper/logger/LoggerNative.cpp

        src/wrapper/listener/LoadListener.cpp
        src/wrapper/listener/LoadListenerNative.cpp
        src/wrapper/listener/ViewListener.cpp
        src/wrapper/listener/ViewListenerNative.cpp

        src/wrapper/surface/Surface.cpp
        src/wrapper/surface/SurfaceFactory.cpp
        src/wrapper/surface/SurfaceFactoryNative.cpp
        src/wrapper/surface/SurfaceNative.cpp

        src/Bitmap.cpp
        src/BitmapFactory.cpp
        src/BitmapSurface.cpp
        src/BitmapSurfaceFactoryProvider.cpp
        src/Keyboard.cpp
        src/Platform.cpp
        src/PlatformProvider.cpp
        src/Renderer.cpp
        src/Session.cpp
        src/UJRLibrary.cpp
        src/View.cpp)

add_library(ultralight-java-reborn SHARED ${UJR_SOURCES})
target_include_directories(ultralight-java-reborn PRIVATE ${UJR_JNI_HEADER_DIR} ${CMAKE_CURRENT_LIST_DIR}/include)
target_link_libraries(ultralight-java-reborn PRIVATE ultralight JNI::JNI)

############################
# Add install instructions #
############################
install(TARGETS ultralight-java-reborn
        RUNTIME
        DESTINATION bin)
